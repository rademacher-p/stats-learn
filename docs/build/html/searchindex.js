Search.setIndex({"docnames": ["index", "stats_learn", "stats_learn.bayes", "stats_learn.predictors", "stats_learn.random", "usage"], "filenames": ["index.rst", "stats_learn.rst", "stats_learn.bayes.rst", "stats_learn.predictors.rst", "stats_learn.random.rst", "usage.rst"], "titles": ["Statistical Learning package documentation", "stats_learn", "bayes", "predictors", "random", "User Guide"], "terms": {"thi": [0, 3, 5], "project": 0, "i": [0, 1, 2, 3, 4, 5], "under": 0, "activ": [0, 3], "develop": 0, "The": [0, 1, 2, 3, 4, 5], "stats_learn": [0, 2, 3, 4, 5], "provid": [0, 1, 5], "framework": 0, "explor": 0, "bayesian": [0, 2, 3, 5], "focu": 0, "see": 0, "user": [0, 2], "guid": 0, "get": [0, 1], "start": 0, "api": 0, "A": [0, 1, 3, 4, 5], "varieti": 0, "random": [0, 1, 2, 3, 5], "element": [0, 1, 3], "xrm": [0, 2, 3, 4], "xcal": 0, "ar": [0, 1, 3, 4, 5], "implement": [0, 4, 5], "submodul": 0, "similar": [0, 3], "other": 0, "distribut": [0, 2, 4, 5], "method": [0, 1, 3, 4, 5], "avail": [0, 3], "sampl": [0, 2, 3, 4, 5], "probabl": [0, 1, 4], "evalu": [0, 1, 3, 5], "prob": [0, 4], "addition": 0, "mode": [0, 1, 3, 4], "mean": [0, 1, 2, 3, 4, 5], "can": [0, 3, 5], "access": [0, 2], "For": [0, 4], "supervis": [0, 3, 4], "analysi": 0, "model": [0, 1, 3, 5], "These": 0, "defin": [0, 1, 2, 4, 5], "fix": [0, 2, 3], "joint": [0, 2, 4], "prm_": 0, "yrm": [0, 2, 3, 4], "over": [0, 1, 4], "observ": [0, 1, 2, 3, 4, 5], "unobserv": [0, 4], "ycal": 0, "condit": [0, 2, 3, 4, 5], "gener": [0, 1, 2, 3, 4, 5], "model_y_x": [0, 4], "us": [0, 1, 2, 3, 4, 5], "predict": [0, 1, 3, 5], "furthermor": 0, "mode_y_x": [0, 4], "directli": 0, "bay": [0, 1, 3, 5], "subpackag": 0, "parametr": 0, "represent": 0, "data": [0, 1, 2, 3, 4, 5], "uptheta": 0, "prior": [0, 2, 3, 5], "character": [0, 2, 4, 5], "uncertainti": [0, 5], "train": [0, 1, 3, 5], "pair": 0, "drm": 0, "ldot": 0, "xrm_i": 0, "yrm_i": 0, "fit": [0, 1, 2, 3, 5], "formul": [0, 5], "posterior": [0, 2, 5], "result": [0, 5], "To": [0, 3, 5], "deploi": 0, "applic": [0, 3], "predictor": [0, 1, 5], "object": [0, 1, 2, 3, 4, 5], "infer": 0, "decis": 0, "function": [0, 1, 2, 3, 4, 5], "respect": 0, "By": 0, "form": [0, 2, 4], "oper": 0, "novel": 0, "h": 0, "hcal": 0, "arbitrari": 0, "loss": [0, 1, 3, 4, 5], "l": 0, "time": 0, "mapsto": 0, "rbbgeq": 0, "enabl": [0, 1, 3, 5], "comparison": 0, "from": [0, 1, 3, 4, 5], "popular": 0, "machin": 0, "allow": [0, 2, 4], "straightforward": 0, "custom": [0, 3], "subclass": [0, 4], "torch": [0, 1], "pytorch": [0, 3], "lightn": [0, 3], "neural": 0, "network": [0, 3], "also": [0, 3], "includ": [0, 1, 3, 4, 5], "which": [0, 1, 3, 4], "variou": [0, 1], "fair": 0, "reproduc": 0, "well": 0, "visual": [0, 4, 5], "markdown": [0, 1, 3], "format": [0, 1, 2, 3], "output": [0, 3, 5], "data_assess": [0, 1, 3, 5], "against": [0, 1, 3], "dataset": [0, 1, 3, 4, 5], "model_assess": [0, 1, 3, 5], "effect": 0, "mont": [0, 1, 3, 5], "carlo": [0, 1, 3, 5], "approxim": [0, 5], "expect": [0, 5], "specifi": [0, 1, 3, 4], "randomli": [0, 2, 3, 4, 5], "each": [0, 1, 3, 4, 5], "learner": [0, 5], "assess": [0, 1, 3, 5], "set": [0, 1, 2, 3, 4], "hyperparamet": 0, "valu": [0, 1, 2, 3, 4, 5], "perform": [0, 1, 5], "computation": 0, "effici": 0, "retrain": 0, "when": [0, 3], "possibl": [0, 3, 4], "instal": 0, "quickstart": 0, "loss_func": [0, 3], "preprocess": [0, 3], "space": [0, 2, 3, 4], "util": 0, "index": [0, 3, 4], "modul": [0, 3], "search": 0, "page": 0, "base": [1, 2, 4], "regress": 1, "classif": 1, "loss_01": 1, "y_hyp": 1, "y": [1, 3, 4, 5], "shape": [1, 2, 3, 4], "zero": 1, "one": [1, 3], "paramet": [1, 2, 3, 4], "array_lik": [1, 2, 3, 4], "hypothes": 1, "target": 1, "tupl": [1, 2, 3, 4], "option": [1, 2, 3, 4], "tensor": [1, 2, 3, 4], "return": [1, 2, 3, 4], "type": [1, 2, 3, 4], "numpi": [1, 2, 4], "ndarrai": [1, 2, 3, 4], "loss_s": 1, "y_est": 1, "squar": [1, 3, 5], "error": [1, 3, 5], "befor": 1, "make_clipp": 1, "lim": [1, 4], "creat": [1, 4], "clip": 1, "input": 1, "close": 1, "box": [1, 4], "arrai": [1, 2, 3, 4], "lower": [1, 4], "upper": [1, 4], "bound": 1, "make_discret": 1, "val": 1, "round": 1, "discret": [1, 4], "prob_disc": 1, "unnorm": 1, "grid": [1, 4], "edg": 1, "corner": 1, "tool": [1, 4], "learn": [1, 3, 4, 5], "d_train": [1, 3, 5], "none": [1, 2, 3, 4, 5], "d_test": [1, 3, 5], "param": [1, 3, 5], "x": [1, 3, 4, 5], "verbos": [1, 3, 5], "fals": [1, 2, 3], "plot_fit": [1, 3, 5], "log_path": [1, 3], "img_path": [1, 3, 5], "ax": [1, 3, 4], "compar": 1, "singl": [1, 3], "collect": [1, 2, 3, 4], "test": [1, 3, 5], "dict": [1, 2, 3, 4], "correspond": [1, 3], "an": [1, 3, 4], "contain": [1, 3, 5], "dictionari": [1, 3], "map": 1, "name": [1, 3, 5], "outer": [1, 3], "product": [1, 3], "statist": [1, 3, 4, 5], "bool": [1, 2, 3, 4], "iter": [1, 3], "print": [1, 3, 5], "out": [1, 3], "plot": [1, 3, 4], "o": [1, 3], "pathlik": [1, 3], "str": [1, 3], "file": [1, 3], "save": [1, 3], "tabl": [1, 3, 5], "imag": [1, 3], "path": [1, 3, 5], "directori": [1, 3, 5], "matplotlib": [1, 3, 4], "onto": [1, 3, 4], "stat": [1, 3, 4, 5], "empir": [1, 2, 3, 4], "risk": [1, 3], "parameter": [1, 2, 3], "list": [1, 3], "n_train": [1, 3, 5], "0": [1, 2, 3, 4, 5], "n_test": [1, 3, 5], "n_mc": [1, 3, 5], "1": [1, 2, 3, 4, 5], "plot_stat": [1, 3, 5], "plot_loss": [1, 3, 5], "print_loss": [1, 3, 5], "rng": [1, 2, 3, 4, 5], "simul": [1, 3], "int": [1, 2, 3, 4], "volum": [1, 3, 5], "number": [1, 2, 3, 4], "e": [1, 2, 3, 4], "g": [1, 3], "std": [1, 3, 5], "cov": [1, 2, 3, 4], "etc": [1, 3], "averag": [1, 3, 5], "np": [1, 2, 3, 4], "randomst": [1, 2, 3, 4], "seed": [1, 2, 3, 4, 5], "One": 1, "item": 1, "per": 1, "note": [1, 4, 5], "welford": 1, "": [1, 3], "onlin": 1, "algorithm": 1, "http": 1, "en": 1, "wikipedia": 1, "org": 1, "wiki": 1, "algorithms_for_calculating_vari": 1, "plot_predict_stat": [1, 3], "do_std": [1, 3], "plot_risk_disc": 1, "true": [1, 2, 3, 4, 5], "cardin": 1, "plot_risk_eval_sim": [1, 3], "predict_stat": [1, 3], "risk_eval_analyt": [1, 3], "analyt": [1, 3], "calcul": [1, 3], "risk_eval_sim": [1, 3], "extrema": 1, "find": 1, "integr": 1, "class": [1, 2, 3, 4], "dtype": [1, 2, 3, 4], "abc": [1, 2, 3, 4], "argmax": 1, "f": [1, 5], "argmin": 1, "properti": [1, 2, 3, 4], "abstract": [1, 2, 3, 4], "make_ax": 1, "moment": [1, 4], "order": 1, "center": 1, "ndim": [1, 2, 3, 4], "dimension": [1, 2, 4], "label": [1, 3], "kwarg": [1, 3, 4], "callabl": [1, 2, 3, 4], "default": [1, 2, 3, 4], "self": [1, 3, 4], "x_plt": [1, 3, 4], "artist": [1, 3, 4], "addit": [1, 3, 4], "keyword": [1, 3, 4], "argument": [1, 3, 4], "plot_xi": 1, "y_std": 1, "y_std_hi": 1, "domain": [1, 2, 3, 4], "rang": [1, 5], "standard": 1, "deviat": 1, "differ": [1, 4, 5], "set_x_plot": 1, "size": [1, 2, 3, 4], "routin": 1, "continu": [1, 4], "orthotop": 1, "limit": [1, 4], "dimens": [1, 4], "lims_plot": 1, "static": [1, 2, 4], "make_grid": 1, "n": [1, 2, 4], "100": [1, 4, 5], "endpoint": [1, 4], "make": 1, "equal": 1, "point": [1, 4, 5], "If": [1, 2, 3, 4], "optimize_kwarg": 1, "__init__": [1, 3], "euclidean": [1, 2, 4], "finit": [1, 4], "finitegener": [1, 4], "explicit": [1, 4], "classmethod": [1, 4], "from_grid": [1, 4], "support": [1, 3], "from_out": 1, "vec": 1, "values_flat": 1, "simplex": 1, "hull_mask": 1, "where": [1, 5], "boundari": 1, "exclud": 1, "n_plot": 1, "scatter_kwarg": 1, "simplexdiscret": 1, "check_spac": 1, "check": 1, "equival": [1, 4], "instanc": [1, 3], "common": 1, "randomgeneratormixin": [1, 2, 4], "make_rng": 1, "check_data_shap": 1, "trail": 1, "match": 1, "desir": 1, "lead": 1, "check_valid_pmf": 1, "p": [1, 4], "full_support": 1, "tol": 1, "1e": 1, "09": 1, "valid": 1, "mass": [1, 4], "pmf": 1, "rais": 1, "valueerror": 1, "full": 1, "ani": [1, 3], "float": [1, 2, 3, 4], "toler": 1, "ensur": 1, "sum": 1, "uniti": 1, "get_now": 1, "iso": 1, "datetim": 1, "compat": 1, "window": 1, "filenam": 1, "vectorize_func": 1, "func": [1, 4], "vector": 1, "accord": 1, "can_warm_start": 2, "d": [2, 3, 4, 5], "warm_start": [2, 3], "refin": [2, 3], "reset": [2, 3], "invok": [2, 3], "restor": [2, 3], "unfit": [2, 3], "state": [2, 3], "random_model": 2, "select": 2, "dirichlet": [2, 4], "prior_mean": [2, 5], "alpha_0": [2, 4], "whose": [2, 3], "process": [2, 4], "local": [2, 4, 5], "concentr": [2, 4], "emp_dist": 2, "normallinear": [2, 4, 5], "prior_cov": [2, 5], "basi": [2, 4], "allow_singular": [2, 4], "normal": [2, 3, 4, 5], "variabl": [2, 4], "linear": 2, "weight": [2, 3, 4, 5], "covari": [2, 4], "whether": [2, 4], "singular": [2, 4], "matrix": [2, 4], "consist": 2, "jointli": [2, 4, 5], "tex_param": [2, 3], "kei": [2, 3], "attribut": [2, 4, 5], "string": 2, "latex": 2, "basis_y_x": [2, 4], "cov_y_x": [2, 4], "model_x": [2, 4], "polynomi": [2, 4, 5], "margin": [2, 4], "varianc": [2, 5], "proc_func": 3, "sequenti": 3, "evaluate_from_model": 3, "drawn": [3, 4], "given": [3, 4], "fit_from_model": 3, "plot_predict": 3, "set_param": 3, "bayes_model": 3, "bayesclassifi": 3, "classifiermixin": 3, "classifi": 3, "bayesregressor": [3, 5], "regressormixin": 3, "regressor": [3, 5], "evaluate_analyt": 3, "minim": 3, "modelclassifi": 3, "modelregressor": [3, 5], "mixinrvi": [3, 4], "litmlp": 3, "layer_s": 3, "nn": 3, "relu": 3, "mse_loss": 3, "optim_cl": 3, "optim": [3, 5], "adam": 3, "optim_param": 3, "lightningmodul": 3, "mlp": 3, "hidden": 3, "layer": 3, "instanti": [3, 5], "configure_optim": 3, "choos": 3, "what": 3, "rate": 3, "schedul": 3, "your": 3, "you": 3, "need": 3, "But": 3, "case": 3, "gan": 3, "might": 3, "have": 3, "multipl": 3, "onli": 3, "work": 3, "manual": 3, "6": 3, "two": [3, 5], "first": [3, 4, 5], "ha": 3, "second": [3, 4, 5], "lr": 3, "lr_scheduler_config": 3, "lr_schedul": 3, "run": 3, "without": 3, "its": [3, 5], "associ": 3, "configur": 3, "shown": [3, 5], "below": [3, 5], "requir": 3, "unit": 3, "step": 3, "could": 3, "epoch": 3, "updat": 3, "end": 3, "wherea": 3, "after": [3, 5], "interv": 3, "how": [3, 5], "mani": 3, "should": [3, 5], "pass": 3, "between": [3, 4], "call": 3, "everi": 3, "frequenc": 3, "metric": 3, "monitor": 3, "like": 3, "reducelronplateau": 3, "val_loss": 3, "enforc": 3, "thu": 3, "stop": 3, "found": 3, "produc": 3, "warn": 3, "strict": 3, "learningratemonitor": 3, "callback": 3, "progress": 3, "log": 3, "made": 3, "simpli": 3, "metric_to_track": 3, "metric_v": 3, "some": 3, "thing": 3, "know": 3, "backward": 3, "automat": 3, "16": 3, "bit": 3, "precis": 3, "handl": 3, "lbfg": 3, "closur": 3, "switch": 3, "them": 3, "yourself": 3, "control": 3, "often": 3, "overrid": 3, "optimizer_step": 3, "hook": 3, "forward": 3, "same": 3, "arg": 3, "whatev": 3, "decid": 3, "training_step": 3, "batch": 3, "batch_idx": 3, "here": 3, "comput": 3, "bar": 3, "logger": 3, "dataload": 3, "integ": 3, "displai": 3, "must": 3, "skip": 3, "next": 3, "multi": 3, "gpu": 3, "tpu": 3, "ipu": 3, "deepspe": 3, "In": 3, "do": 3, "fancier": 3, "someth": 3, "specif": 3, "exampl": [3, 5], "def": 3, "z": 3, "encod": 3, "super": 3, "automatic_optim": 3, "opt1": 3, "opt2": 3, "decod": 3, "accumulate_grad_batch": 3, "intern": 3, "litpredictor": 3, "trainer_param": 3, "dl_kwarg": 3, "reset_func": 3, "pl": 3, "trainer": 3, "build_mlp": 3, "last_act": 3, "final": 3, "reset_weight": 3, "most": 4, "plot_prob": 4, "densiti": 4, "baserv": 4, "mixinrv": 4, "numer": 4, "beta": 4, "b": 4, "uniform": 4, "from_mean": 4, "5": [4, 5], "2": [4, 5], "rv": 4, "total": 4, "conceptu": 4, "ident": 4, "binomi": 4, "impli": 4, "bernoulli": 4, "dataempir": 4, "count": 4, "add_data": 4, "add": 4, "new": [4, 5], "ad": 4, "add_valu": 4, "from_data": 4, "dataempiricalrv": 4, "central": 4, "determinist": 4, "deterministicrv": 4, "realiz": [4, 5], "dirichletempir": 4, "dirichletempiricalscalar": 4, "scalar": 4, "simplex_round": 4, "empiricalscalar": 4, "finitegenericrv": 4, "mixin": 4, "mixtur": 4, "dist": 4, "mix": 4, "combin": 4, "n_dist": 4, "set_dist": 4, "idx": 4, "overwrit": 4, "set_dist_attr": 4, "dist_kwarg": 4, "mixturerv": 4, "term": 4, "assum": 4, "former": 4, "while": 4, "latter": 4, "mode_x": 4, "plot_mode_y_x": 4, "baservx": 4, "mixinrvx": 4, "baservxi": 4, "baservi": 4, "betalinear": 4, "alpha_y_x": 4, "cov_x": 4, "mean_x": 4, "mean_y_x": 4, "classcondit": 4, "model_i": 4, "from_finit": 4, "values_i": 4, "p_y": 4, "constructor": 4, "model_x_i": 4, "datacondit": 4, "values_x": 4, "p_x": 4, "from_mean_emp": 4, "construct": 4, "infinit": 4, "instead": 4, "from_mean_poly_emp": 4, "dataconditionalrvx": 4, "dataconditionalrvxi": 4, "dataconditionalrvi": 4, "dataempiricalrvx": 4, "dataempiricalrvxi": 4, "dataempiricalrvi": 4, "plot_cov_y_x": 4, "plot_mean_y_x": 4, "mixturervx": 4, "mixturervxi": 4, "mixturervi": 4, "cov_y_x_": 4, "packag": 5, "pip": 5, "top": 5, "level": 5, "pyproject": 5, "toml": 5, "basic": 5, "creation": 5, "definit": 5, "opt_predictor": 5, "knowledg": 5, "determin": 5, "norm_model": 5, "about": 5, "onc": 5, "norm_predictor": 5, "reduc": 5, "import": 5, "12345": 5, "10": 5, "20": 5, "loss_min": 5, "minimum": 5, "3f": 5, "loss_prior": 5, "untrain": 5, "loss_fit": 5, "549": 5, "3": 5, "413": 5, "951": 5, "code": 5, "execut": 5, "previou": 5, "snippet": 5, "replic": 5, "abov": 5, "graphic": 5, "show": 5, "repeatedli": 5, "meaning": 5, "both": 5, "01": 5, "png": 5, "1000": 5, "v": 5, "sigma_": 5, "theta": 5, "010": 5, "171": 5, "034": 5, "000": 5, "005": 5, "689": 5, "629": 5, "205": 5}, "objects": {"": [[1, 0, 0, "-", "stats_learn"]], "stats_learn": [[2, 0, 0, "-", "bayes"], [1, 0, 0, "-", "loss_funcs"], [3, 0, 0, "-", "predictors"], [1, 0, 0, "-", "preprocessing"], [4, 0, 0, "-", "random"], [1, 0, 0, "-", "results"], [1, 0, 0, "-", "spaces"], [1, 0, 0, "-", "util"]], "stats_learn.bayes": [[2, 0, 0, "-", "elements"], [2, 0, 0, "-", "models"]], "stats_learn.bayes.elements": [[2, 1, 1, "", "Base"], [2, 1, 1, "", "Dirichlet"], [2, 1, 1, "", "NormalLinear"]], "stats_learn.bayes.elements.Base": [[2, 2, 1, "", "can_warm_start"], [2, 3, 1, "", "dtype"], [2, 4, 1, "", "fit"], [2, 3, 1, "", "ndim"], [2, 2, 1, "", "prior"], [2, 4, 1, "", "random_model"], [2, 4, 1, "", "reset"], [2, 4, 1, "", "sample"], [2, 3, 1, "", "shape"], [2, 3, 1, "", "size"], [2, 3, 1, "", "space"]], "stats_learn.bayes.elements.Dirichlet": [[2, 3, 1, "", "alpha_0"], [2, 2, 1, "", "can_warm_start"], [2, 3, 1, "", "emp_dist"], [2, 3, 1, "", "n"], [2, 3, 1, "", "prior_mean"], [2, 4, 1, "", "random_model"], [2, 4, 1, "", "reset"]], "stats_learn.bayes.elements.NormalLinear": [[2, 3, 1, "", "basis"], [2, 2, 1, "", "can_warm_start"], [2, 3, 1, "", "cov"], [2, 2, 1, "", "prior"], [2, 3, 1, "", "prior_cov"], [2, 3, 1, "", "prior_mean"], [2, 4, 1, "", "random_model"], [2, 4, 1, "", "reset"]], "stats_learn.bayes.models": [[2, 1, 1, "", "Base"], [2, 1, 1, "", "Dirichlet"], [2, 1, 1, "", "NormalLinear"]], "stats_learn.bayes.models.Base": [[2, 2, 1, "", "can_warm_start"], [2, 3, 1, "", "dtype"], [2, 4, 1, "", "fit"], [2, 3, 1, "", "ndim"], [2, 4, 1, "", "random_model"], [2, 4, 1, "", "reset"], [2, 4, 1, "", "sample"], [2, 3, 1, "", "shape"], [2, 3, 1, "", "size"], [2, 3, 1, "", "space"], [2, 4, 1, "", "tex_params"]], "stats_learn.bayes.models.Dirichlet": [[2, 3, 1, "", "alpha_0"], [2, 2, 1, "", "can_warm_start"], [2, 3, 1, "", "emp_dist"], [2, 3, 1, "", "n"], [2, 3, 1, "", "prior_mean"], [2, 4, 1, "", "random_model"], [2, 4, 1, "", "reset"], [2, 4, 1, "", "tex_params"]], "stats_learn.bayes.models.NormalLinear": [[2, 3, 1, "", "basis_y_x"], [2, 2, 1, "", "can_warm_start"], [2, 3, 1, "", "cov_y_x"], [2, 3, 1, "", "model_x"], [2, 2, 1, "", "prior"], [2, 3, 1, "", "prior_cov"], [2, 3, 1, "", "prior_mean"], [2, 4, 1, "", "random_model"], [2, 4, 1, "", "reset"], [2, 4, 1, "", "tex_params"]], "stats_learn.loss_funcs": [[1, 5, 1, "", "loss_01"], [1, 5, 1, "", "loss_se"]], "stats_learn.predictors": [[3, 0, 0, "-", "base"], [3, 0, 0, "-", "torch"]], "stats_learn.predictors.base": [[3, 1, 1, "", "Base"], [3, 1, 1, "", "Bayes"], [3, 1, 1, "", "BayesClassifier"], [3, 1, 1, "", "BayesRegressor"], [3, 1, 1, "", "ClassifierMixin"], [3, 1, 1, "", "Model"], [3, 1, 1, "", "ModelClassifier"], [3, 1, 1, "", "ModelRegressor"], [3, 1, 1, "", "RegressorMixin"]], "stats_learn.predictors.base.Base": [[3, 4, 1, "", "data_assess"], [3, 3, 1, "", "dtype"], [3, 4, 1, "", "evaluate"], [3, 4, 1, "", "evaluate_from_model"], [3, 4, 1, "", "fit"], [3, 4, 1, "", "fit_from_model"], [3, 4, 1, "", "model_assess"], [3, 3, 1, "", "ndim"], [3, 4, 1, "", "plot_predict"], [3, 4, 1, "", "plot_predict_stats"], [3, 4, 1, "", "plot_risk_eval_sim"], [3, 4, 1, "", "predict"], [3, 4, 1, "", "predict_stats"], [3, 4, 1, "", "reset"], [3, 4, 1, "", "risk_eval_analytic"], [3, 4, 1, "", "risk_eval_sim"], [3, 4, 1, "", "set_params"], [3, 3, 1, "", "shape"], [3, 3, 1, "", "size"], [3, 3, 1, "", "space"], [3, 4, 1, "", "tex_params"]], "stats_learn.predictors.base.Bayes": [[3, 4, 1, "", "reset"]], "stats_learn.predictors.base.BayesRegressor": [[3, 4, 1, "", "evaluate_analytic"]], "stats_learn.predictors.base.ClassifierMixin": [[3, 2, 1, "", "model"]], "stats_learn.predictors.base.Model": [[3, 4, 1, "", "fit_from_model"], [3, 4, 1, "", "reset"]], "stats_learn.predictors.base.ModelRegressor": [[3, 4, 1, "", "evaluate_analytic"]], "stats_learn.predictors.base.RegressorMixin": [[3, 2, 1, "", "model"]], "stats_learn.predictors.torch": [[3, 1, 1, "", "LitMLP"], [3, 1, 1, "", "LitPredictor"], [3, 5, 1, "", "build_mlp"], [3, 5, 1, "", "reset_weights"]], "stats_learn.predictors.torch.LitMLP": [[3, 4, 1, "", "configure_optimizers"], [3, 4, 1, "", "forward"], [3, 4, 1, "", "training_step"]], "stats_learn.predictors.torch.LitPredictor": [[3, 4, 1, "", "reset"], [3, 4, 1, "", "set_params"]], "stats_learn.preprocessing": [[1, 5, 1, "", "make_clipper"], [1, 5, 1, "", "make_discretizer"], [1, 5, 1, "", "prob_disc"]], "stats_learn.random": [[4, 0, 0, "-", "elements"], [4, 0, 0, "-", "models"]], "stats_learn.random.elements": [[4, 1, 1, "", "Base"], [4, 1, 1, "", "BaseRV"], [4, 1, 1, "", "Beta"], [4, 1, 1, "", "Binomial"], [4, 1, 1, "", "DataEmpirical"], [4, 1, 1, "", "DataEmpiricalRV"], [4, 1, 1, "", "Deterministic"], [4, 1, 1, "", "DeterministicRV"], [4, 1, 1, "", "Dirichlet"], [4, 1, 1, "", "DirichletEmpirical"], [4, 1, 1, "", "DirichletEmpiricalScalar"], [4, 1, 1, "", "Empirical"], [4, 1, 1, "", "EmpiricalScalar"], [4, 1, 1, "", "FiniteGeneric"], [4, 1, 1, "", "FiniteGenericRV"], [4, 1, 1, "", "MixinRV"], [4, 1, 1, "", "Mixture"], [4, 1, 1, "", "MixtureRV"], [4, 1, 1, "", "Normal"], [4, 1, 1, "", "NormalLinear"], [4, 1, 1, "", "Uniform"]], "stats_learn.random.elements.Base": [[4, 3, 1, "", "dtype"], [4, 3, 1, "", "mode"], [4, 3, 1, "", "ndim"], [4, 4, 1, "", "plot_prob"], [4, 4, 1, "", "prob"], [4, 4, 1, "", "sample"], [4, 3, 1, "", "shape"], [4, 3, 1, "", "size"], [4, 3, 1, "", "space"]], "stats_learn.random.elements.Beta": [[4, 3, 1, "", "a"], [4, 3, 1, "", "b"], [4, 4, 1, "", "from_mean"], [4, 4, 1, "", "prob"]], "stats_learn.random.elements.Binomial": [[4, 3, 1, "", "n"], [4, 3, 1, "", "p"], [4, 4, 1, "", "prob"]], "stats_learn.random.elements.DataEmpirical": [[4, 4, 1, "", "add_data"], [4, 4, 1, "", "add_values"], [4, 4, 1, "", "from_data"], [4, 3, 1, "", "mode"], [4, 4, 1, "", "plot_prob"]], "stats_learn.random.elements.DataEmpiricalRV": [[4, 3, 1, "", "cov"], [4, 3, 1, "", "mean"]], "stats_learn.random.elements.Deterministic": [[4, 4, 1, "", "prob"], [4, 3, 1, "", "value"]], "stats_learn.random.elements.DeterministicRV": [[4, 3, 1, "", "value"]], "stats_learn.random.elements.Dirichlet": [[4, 3, 1, "", "alpha_0"], [4, 3, 1, "", "mean"], [4, 4, 1, "", "plot_prob"], [4, 4, 1, "", "prob"]], "stats_learn.random.elements.DirichletEmpirical": [[4, 3, 1, "", "alpha_0"], [4, 3, 1, "", "mean"], [4, 3, 1, "", "n"], [4, 4, 1, "", "prob"]], "stats_learn.random.elements.DirichletEmpiricalScalar": [[4, 3, 1, "", "alpha_0"], [4, 3, 1, "", "cov"], [4, 3, 1, "", "mean"], [4, 3, 1, "", "n"], [4, 4, 1, "", "prob"]], "stats_learn.random.elements.Empirical": [[4, 3, 1, "", "mean"], [4, 3, 1, "", "n"], [4, 4, 1, "", "prob"], [4, 4, 1, "", "simplex_round"]], "stats_learn.random.elements.EmpiricalScalar": [[4, 4, 1, "", "prob"]], "stats_learn.random.elements.FiniteGeneric": [[4, 4, 1, "", "from_grid"], [4, 3, 1, "", "mode"], [4, 3, 1, "", "p"], [4, 3, 1, "", "values"]], "stats_learn.random.elements.FiniteGenericRV": [[4, 3, 1, "", "cov"], [4, 3, 1, "", "mean"]], "stats_learn.random.elements.MixinRV": [[4, 3, 1, "", "cov"], [4, 3, 1, "", "mean"]], "stats_learn.random.elements.Mixture": [[4, 3, 1, "", "dists"], [4, 3, 1, "", "mode"], [4, 3, 1, "", "n_dists"], [4, 4, 1, "", "plot_prob"], [4, 4, 1, "", "prob"], [4, 4, 1, "", "set_dist"], [4, 4, 1, "", "set_dist_attr"], [4, 3, 1, "", "weights"]], "stats_learn.random.elements.MixtureRV": [[4, 3, 1, "", "mean"]], "stats_learn.random.elements.Normal": [[4, 3, 1, "", "cov"], [4, 3, 1, "", "mean"], [4, 4, 1, "", "prob"]], "stats_learn.random.elements.NormalLinear": [[4, 3, 1, "", "basis"], [4, 3, 1, "", "weights"]], "stats_learn.random.elements.Uniform": [[4, 3, 1, "", "lims"], [4, 4, 1, "", "prob"]], "stats_learn.random.models": [[4, 1, 1, "", "Base"], [4, 1, 1, "", "BaseRVx"], [4, 1, 1, "", "BaseRVxy"], [4, 1, 1, "", "BaseRVy"], [4, 1, 1, "", "BetaLinear"], [4, 1, 1, "", "ClassConditional"], [4, 1, 1, "", "DataConditional"], [4, 1, 1, "", "DataConditionalRVx"], [4, 1, 1, "", "DataConditionalRVxy"], [4, 1, 1, "", "DataConditionalRVy"], [4, 1, 1, "", "DataEmpirical"], [4, 1, 1, "", "DataEmpiricalRVx"], [4, 1, 1, "", "DataEmpiricalRVxy"], [4, 1, 1, "", "DataEmpiricalRVy"], [4, 1, 1, "", "MixinRVx"], [4, 1, 1, "", "MixinRVy"], [4, 1, 1, "", "Mixture"], [4, 1, 1, "", "MixtureRVx"], [4, 1, 1, "", "MixtureRVxy"], [4, 1, 1, "", "MixtureRVy"], [4, 1, 1, "", "NormalLinear"]], "stats_learn.random.models.Base": [[4, 3, 1, "", "dtype"], [4, 3, 1, "", "mode_x"], [4, 4, 1, "", "mode_y_x"], [4, 3, 1, "", "model_x"], [4, 4, 1, "", "model_y_x"], [4, 3, 1, "", "ndim"], [4, 4, 1, "", "plot_mode_y_x"], [4, 4, 1, "", "sample"], [4, 3, 1, "", "shape"], [4, 3, 1, "", "size"], [4, 3, 1, "", "space"]], "stats_learn.random.models.BaseRVx": [[4, 4, 1, "", "model_y_x"]], "stats_learn.random.models.BaseRVxy": [[4, 4, 1, "", "model_y_x"]], "stats_learn.random.models.BaseRVy": [[4, 4, 1, "", "model_y_x"]], "stats_learn.random.models.BetaLinear": [[4, 3, 1, "", "basis_y_x"], [4, 3, 1, "", "cov_x"], [4, 4, 1, "", "cov_y_x"], [4, 3, 1, "", "mean_x"], [4, 4, 1, "", "mean_y_x"], [4, 3, 1, "", "mode_x"], [4, 3, 1, "", "model_x"], [4, 4, 1, "", "model_y_x"]], "stats_learn.random.models.ClassConditional": [[4, 3, 1, "", "cov_x"], [4, 3, 1, "", "dists"], [4, 4, 1, "", "from_finite"], [4, 3, 1, "", "mean_x"], [4, 3, 1, "", "mode_x"], [4, 4, 1, "", "mode_y_x"], [4, 3, 1, "", "model_x"], [4, 4, 1, "", "model_x_y"], [4, 3, 1, "", "model_y"], [4, 4, 1, "", "model_y_x"], [4, 3, 1, "", "p_y"]], "stats_learn.random.models.DataConditional": [[4, 3, 1, "", "dists"], [4, 4, 1, "", "from_finite"], [4, 4, 1, "", "from_mean_emp"], [4, 4, 1, "", "from_mean_poly_emp"], [4, 3, 1, "", "mode_x"], [4, 3, 1, "", "model_x"], [4, 4, 1, "", "model_y_x"]], "stats_learn.random.models.DataConditionalRVx": [[4, 3, 1, "", "cov_x"], [4, 3, 1, "", "mean_x"]], "stats_learn.random.models.DataEmpirical": [[4, 4, 1, "", "add_data"], [4, 4, 1, "", "add_values"], [4, 4, 1, "", "from_data"], [4, 3, 1, "", "mode_x"], [4, 4, 1, "", "model_y_x"]], "stats_learn.random.models.DataEmpiricalRVx": [[4, 3, 1, "", "cov_x"], [4, 3, 1, "", "mean_x"]], "stats_learn.random.models.MixinRVx": [[4, 3, 1, "", "cov_x"], [4, 3, 1, "", "mean_x"]], "stats_learn.random.models.MixinRVy": [[4, 4, 1, "", "cov_y_x"], [4, 4, 1, "", "mean_y_x"], [4, 4, 1, "", "plot_cov_y_x"], [4, 4, 1, "", "plot_mean_y_x"], [4, 2, 1, "", "shape"], [4, 2, 1, "", "space"]], "stats_learn.random.models.Mixture": [[4, 3, 1, "", "dists"], [4, 3, 1, "", "mode_x"], [4, 3, 1, "", "model_x"], [4, 4, 1, "", "model_y_x"], [4, 3, 1, "", "n_dists"], [4, 4, 1, "", "set_dist"], [4, 4, 1, "", "set_dist_attr"], [4, 3, 1, "", "weights"]], "stats_learn.random.models.MixtureRVy": [[4, 4, 1, "", "mean_y_x"]], "stats_learn.random.models.NormalLinear": [[4, 3, 1, "", "basis_y_x"], [4, 3, 1, "", "cov_x"], [4, 3, 1, "", "cov_y_x_"], [4, 3, 1, "", "mean_x"], [4, 4, 1, "", "mean_y_x"], [4, 3, 1, "", "mode_x"], [4, 4, 1, "", "mode_y_x"], [4, 3, 1, "", "model_x"], [4, 4, 1, "", "model_y_x"]], "stats_learn.results": [[1, 5, 1, "", "data_assess"], [1, 5, 1, "", "model_assess"], [1, 5, 1, "", "plot_predict_stats"], [1, 5, 1, "", "plot_risk_disc"], [1, 5, 1, "", "plot_risk_eval_sim"], [1, 5, 1, "", "predict_stats"], [1, 5, 1, "", "risk_eval_analytic"], [1, 5, 1, "", "risk_eval_sim"]], "stats_learn.spaces": [[1, 1, 1, "", "Base"], [1, 1, 1, "", "Box"], [1, 1, 1, "", "Continuous"], [1, 1, 1, "", "Discrete"], [1, 1, 1, "", "Euclidean"], [1, 1, 1, "", "Finite"], [1, 1, 1, "", "FiniteGeneric"], [1, 1, 1, "", "Simplex"], [1, 1, 1, "", "SimplexDiscrete"], [1, 5, 1, "", "check_spaces"]], "stats_learn.spaces.Base": [[1, 4, 1, "", "argmax"], [1, 4, 1, "", "argmin"], [1, 3, 1, "", "dtype"], [1, 4, 1, "", "integrate"], [1, 4, 1, "", "make_axes"], [1, 4, 1, "", "moment"], [1, 3, 1, "", "ndim"], [1, 4, 1, "", "plot"], [1, 4, 1, "", "plot_xy"], [1, 4, 1, "", "set_x_plot"], [1, 3, 1, "", "shape"], [1, 3, 1, "", "size"], [1, 3, 1, "", "x_plt"]], "stats_learn.spaces.Box": [[1, 3, 1, "", "lims"], [1, 3, 1, "", "lims_plot"], [1, 4, 1, "", "make_grid"], [1, 3, 1, "", "optimize_kwargs"], [1, 4, 1, "", "plot"], [1, 4, 1, "", "set_x_plot"]], "stats_learn.spaces.Continuous": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "integrate"], [1, 3, 1, "", "optimize_kwargs"]], "stats_learn.spaces.Euclidean": [[1, 3, 1, "", "lims_plot"], [1, 3, 1, "", "optimize_kwargs"]], "stats_learn.spaces.FiniteGeneric": [[1, 4, 1, "", "from_grid"], [1, 4, 1, "", "from_outer"], [1, 4, 1, "", "integrate"], [1, 4, 1, "", "set_x_plot"], [1, 3, 1, "", "values_flat"]], "stats_learn.spaces.Simplex": [[1, 4, 1, "", "make_axes"], [1, 4, 1, "", "make_grid"], [1, 3, 1, "", "n_plot"], [1, 4, 1, "", "plot"], [1, 4, 1, "", "set_x_plot"]], "stats_learn.spaces.SimplexDiscrete": [[1, 3, 1, "", "n_plot"]], "stats_learn.util": [[1, 1, 1, "", "RandomGeneratorMixin"], [1, 5, 1, "", "check_data_shape"], [1, 5, 1, "", "check_valid_pmf"], [1, 5, 1, "", "get_now"], [1, 5, 1, "", "vectorize_func"]], "stats_learn.util.RandomGeneratorMixin": [[1, 4, 1, "", "make_rng"], [1, 3, 1, "", "rng"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"]}, "titleterms": {"statist": 0, "learn": 0, "packag": 0, "document": 0, "content": 0, "indic": 0, "tabl": 0, "stats_learn": 1, "loss_func": 1, "preprocess": 1, "result": 1, "space": 1, "util": 1, "bay": 2, "element": [2, 4], "model": [2, 4], "predictor": 3, "base": 3, "torch": 3, "random": 4, "user": 5, "guid": 5, "instal": 5, "quickstart": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Statistical Learning package documentation": [[0, "statistical-learning-package-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "stats_learn": [[1, "module-stats_learn"]], "loss_funcs": [[1, "module-stats_learn.loss_funcs"]], "preprocessing": [[1, "module-stats_learn.preprocessing"]], "results": [[1, "module-stats_learn.results"]], "spaces": [[1, "module-stats_learn.spaces"]], "util": [[1, "module-stats_learn.util"]], "bayes": [[2, "module-stats_learn.bayes"]], "elements": [[2, "module-stats_learn.bayes.elements"], [4, "module-stats_learn.random.elements"]], "models": [[2, "module-stats_learn.bayes.models"], [4, "module-stats_learn.random.models"]], "predictors": [[3, "module-stats_learn.predictors"]], "base": [[3, "module-stats_learn.predictors.base"]], "torch": [[3, "module-stats_learn.predictors.torch"]], "random": [[4, "module-stats_learn.random"]], "User Guide": [[5, "user-guide"]], "Installation": [[5, "installation"]], "Quickstart": [[5, "quickstart"]]}, "indexentries": {"base (class in stats_learn.spaces)": [[1, "stats_learn.spaces.Base"]], "box (class in stats_learn.spaces)": [[1, "stats_learn.spaces.Box"]], "continuous (class in stats_learn.spaces)": [[1, "stats_learn.spaces.Continuous"]], "discrete (class in stats_learn.spaces)": [[1, "stats_learn.spaces.Discrete"]], "euclidean (class in stats_learn.spaces)": [[1, "stats_learn.spaces.Euclidean"]], "finite (class in stats_learn.spaces)": [[1, "stats_learn.spaces.Finite"]], "finitegeneric (class in stats_learn.spaces)": [[1, "stats_learn.spaces.FiniteGeneric"]], "randomgeneratormixin (class in stats_learn.util)": [[1, "stats_learn.util.RandomGeneratorMixin"]], "simplex (class in stats_learn.spaces)": [[1, "stats_learn.spaces.Simplex"]], "simplexdiscrete (class in stats_learn.spaces)": [[1, "stats_learn.spaces.SimplexDiscrete"]], "__init__() (stats_learn.spaces.continuous method)": [[1, "stats_learn.spaces.Continuous.__init__"]], "argmax() (stats_learn.spaces.base method)": [[1, "stats_learn.spaces.Base.argmax"]], "argmin() (stats_learn.spaces.base method)": [[1, "stats_learn.spaces.Base.argmin"]], "check_data_shape() (in module stats_learn.util)": [[1, "stats_learn.util.check_data_shape"]], "check_spaces() (in module stats_learn.spaces)": [[1, "stats_learn.spaces.check_spaces"]], "check_valid_pmf() (in module stats_learn.util)": [[1, "stats_learn.util.check_valid_pmf"]], "data_assess() (in module stats_learn.results)": [[1, "stats_learn.results.data_assess"]], "dtype (stats_learn.spaces.base property)": [[1, "stats_learn.spaces.Base.dtype"]], "from_grid() (stats_learn.spaces.finitegeneric class method)": [[1, "stats_learn.spaces.FiniteGeneric.from_grid"]], "from_outer() (stats_learn.spaces.finitegeneric class method)": [[1, "stats_learn.spaces.FiniteGeneric.from_outer"]], "get_now() (in module stats_learn.util)": [[1, "stats_learn.util.get_now"]], "integrate() (stats_learn.spaces.base method)": [[1, "stats_learn.spaces.Base.integrate"]], "integrate() (stats_learn.spaces.continuous method)": [[1, "stats_learn.spaces.Continuous.integrate"]], "integrate() (stats_learn.spaces.finitegeneric method)": [[1, "stats_learn.spaces.FiniteGeneric.integrate"]], "lims (stats_learn.spaces.box property)": [[1, "stats_learn.spaces.Box.lims"]], "lims_plot (stats_learn.spaces.box property)": [[1, "stats_learn.spaces.Box.lims_plot"]], "lims_plot (stats_learn.spaces.euclidean property)": [[1, "stats_learn.spaces.Euclidean.lims_plot"]], "loss_01() (in module stats_learn.loss_funcs)": [[1, "stats_learn.loss_funcs.loss_01"]], "loss_se() (in module stats_learn.loss_funcs)": [[1, "stats_learn.loss_funcs.loss_se"]], "make_axes() (stats_learn.spaces.base method)": [[1, "stats_learn.spaces.Base.make_axes"]], "make_axes() (stats_learn.spaces.simplex method)": [[1, "stats_learn.spaces.Simplex.make_axes"]], "make_clipper() (in module stats_learn.preprocessing)": [[1, "stats_learn.preprocessing.make_clipper"]], "make_discretizer() (in module stats_learn.preprocessing)": [[1, "stats_learn.preprocessing.make_discretizer"]], "make_grid() (stats_learn.spaces.box static method)": [[1, "stats_learn.spaces.Box.make_grid"]], "make_grid() (stats_learn.spaces.simplex static method)": [[1, "stats_learn.spaces.Simplex.make_grid"]], "make_rng() (stats_learn.util.randomgeneratormixin static method)": [[1, "stats_learn.util.RandomGeneratorMixin.make_rng"]], "model_assess() (in module stats_learn.results)": [[1, "stats_learn.results.model_assess"]], "module": [[1, "module-stats_learn"], [1, "module-stats_learn.loss_funcs"], [1, "module-stats_learn.preprocessing"], [1, "module-stats_learn.results"], [1, "module-stats_learn.spaces"], [1, "module-stats_learn.util"], [2, "module-stats_learn.bayes"], [2, "module-stats_learn.bayes.elements"], [2, "module-stats_learn.bayes.models"], [3, "module-stats_learn.predictors"], [3, "module-stats_learn.predictors.base"], [3, "module-stats_learn.predictors.torch"], [4, "module-stats_learn.random"], [4, "module-stats_learn.random.elements"], [4, "module-stats_learn.random.models"]], "moment() (stats_learn.spaces.base method)": [[1, "stats_learn.spaces.Base.moment"]], "n_plot (stats_learn.spaces.simplex property)": [[1, "stats_learn.spaces.Simplex.n_plot"]], "n_plot (stats_learn.spaces.simplexdiscrete property)": [[1, "stats_learn.spaces.SimplexDiscrete.n_plot"]], "ndim (stats_learn.spaces.base property)": [[1, "stats_learn.spaces.Base.ndim"]], "optimize_kwargs (stats_learn.spaces.box property)": [[1, "stats_learn.spaces.Box.optimize_kwargs"]], "optimize_kwargs (stats_learn.spaces.continuous property)": [[1, "stats_learn.spaces.Continuous.optimize_kwargs"]], "optimize_kwargs (stats_learn.spaces.euclidean property)": [[1, "stats_learn.spaces.Euclidean.optimize_kwargs"]], "plot() (stats_learn.spaces.base method)": [[1, "stats_learn.spaces.Base.plot"]], "plot() (stats_learn.spaces.box method)": [[1, "stats_learn.spaces.Box.plot"]], "plot() (stats_learn.spaces.simplex method)": [[1, "stats_learn.spaces.Simplex.plot"]], "plot_predict_stats() (in module stats_learn.results)": [[1, "stats_learn.results.plot_predict_stats"]], "plot_risk_disc() (in module stats_learn.results)": [[1, "stats_learn.results.plot_risk_disc"]], "plot_risk_eval_sim() (in module stats_learn.results)": [[1, "stats_learn.results.plot_risk_eval_sim"]], "plot_xy() (stats_learn.spaces.base method)": [[1, "stats_learn.spaces.Base.plot_xy"]], "predict_stats() (in module stats_learn.results)": [[1, "stats_learn.results.predict_stats"]], "prob_disc() (in module stats_learn.preprocessing)": [[1, "stats_learn.preprocessing.prob_disc"]], "risk_eval_analytic() (in module stats_learn.results)": [[1, "stats_learn.results.risk_eval_analytic"]], "risk_eval_sim() (in module stats_learn.results)": [[1, "stats_learn.results.risk_eval_sim"]], "rng (stats_learn.util.randomgeneratormixin property)": [[1, "stats_learn.util.RandomGeneratorMixin.rng"]], "set_x_plot() (stats_learn.spaces.base method)": [[1, "stats_learn.spaces.Base.set_x_plot"]], "set_x_plot() (stats_learn.spaces.box method)": [[1, "stats_learn.spaces.Box.set_x_plot"]], "set_x_plot() (stats_learn.spaces.finitegeneric method)": [[1, "stats_learn.spaces.FiniteGeneric.set_x_plot"]], "set_x_plot() (stats_learn.spaces.simplex method)": [[1, "stats_learn.spaces.Simplex.set_x_plot"]], "shape (stats_learn.spaces.base property)": [[1, "stats_learn.spaces.Base.shape"]], "size (stats_learn.spaces.base property)": [[1, "stats_learn.spaces.Base.size"]], "stats_learn": [[1, "module-stats_learn"]], "stats_learn.loss_funcs": [[1, "module-stats_learn.loss_funcs"]], "stats_learn.preprocessing": [[1, "module-stats_learn.preprocessing"]], "stats_learn.results": [[1, "module-stats_learn.results"]], "stats_learn.spaces": [[1, "module-stats_learn.spaces"]], "stats_learn.util": [[1, "module-stats_learn.util"]], "values_flat (stats_learn.spaces.finitegeneric property)": [[1, "stats_learn.spaces.FiniteGeneric.values_flat"]], "vectorize_func() (in module stats_learn.util)": [[1, "stats_learn.util.vectorize_func"]], "x_plt (stats_learn.spaces.base property)": [[1, "stats_learn.spaces.Base.x_plt"]], "base (class in stats_learn.bayes.elements)": [[2, "stats_learn.bayes.elements.Base"]], "base (class in stats_learn.bayes.models)": [[2, "stats_learn.bayes.models.Base"]], "dirichlet (class in stats_learn.bayes.elements)": [[2, "stats_learn.bayes.elements.Dirichlet"]], "dirichlet (class in stats_learn.bayes.models)": [[2, "stats_learn.bayes.models.Dirichlet"]], "normallinear (class in stats_learn.bayes.elements)": [[2, "stats_learn.bayes.elements.NormalLinear"]], "normallinear (class in stats_learn.bayes.models)": [[2, "stats_learn.bayes.models.NormalLinear"]], "alpha_0 (stats_learn.bayes.elements.dirichlet property)": [[2, "stats_learn.bayes.elements.Dirichlet.alpha_0"]], "alpha_0 (stats_learn.bayes.models.dirichlet property)": [[2, "stats_learn.bayes.models.Dirichlet.alpha_0"]], "basis (stats_learn.bayes.elements.normallinear property)": [[2, "stats_learn.bayes.elements.NormalLinear.basis"]], "basis_y_x (stats_learn.bayes.models.normallinear property)": [[2, "stats_learn.bayes.models.NormalLinear.basis_y_x"]], "can_warm_start (stats_learn.bayes.elements.base attribute)": [[2, "stats_learn.bayes.elements.Base.can_warm_start"]], "can_warm_start (stats_learn.bayes.elements.dirichlet attribute)": [[2, "stats_learn.bayes.elements.Dirichlet.can_warm_start"]], "can_warm_start (stats_learn.bayes.elements.normallinear attribute)": [[2, "stats_learn.bayes.elements.NormalLinear.can_warm_start"]], "can_warm_start (stats_learn.bayes.models.base attribute)": [[2, "stats_learn.bayes.models.Base.can_warm_start"]], "can_warm_start (stats_learn.bayes.models.dirichlet attribute)": [[2, "stats_learn.bayes.models.Dirichlet.can_warm_start"]], "can_warm_start (stats_learn.bayes.models.normallinear attribute)": [[2, "stats_learn.bayes.models.NormalLinear.can_warm_start"]], "cov (stats_learn.bayes.elements.normallinear property)": [[2, "stats_learn.bayes.elements.NormalLinear.cov"]], "cov_y_x (stats_learn.bayes.models.normallinear property)": [[2, "stats_learn.bayes.models.NormalLinear.cov_y_x"]], "dtype (stats_learn.bayes.elements.base property)": [[2, "stats_learn.bayes.elements.Base.dtype"]], "dtype (stats_learn.bayes.models.base property)": [[2, "stats_learn.bayes.models.Base.dtype"]], "emp_dist (stats_learn.bayes.elements.dirichlet property)": [[2, "stats_learn.bayes.elements.Dirichlet.emp_dist"]], "emp_dist (stats_learn.bayes.models.dirichlet property)": [[2, "stats_learn.bayes.models.Dirichlet.emp_dist"]], "fit() (stats_learn.bayes.elements.base method)": [[2, "stats_learn.bayes.elements.Base.fit"]], "fit() (stats_learn.bayes.models.base method)": [[2, "stats_learn.bayes.models.Base.fit"]], "model_x (stats_learn.bayes.models.normallinear property)": [[2, "stats_learn.bayes.models.NormalLinear.model_x"]], "n (stats_learn.bayes.elements.dirichlet property)": [[2, "stats_learn.bayes.elements.Dirichlet.n"]], "n (stats_learn.bayes.models.dirichlet property)": [[2, "stats_learn.bayes.models.Dirichlet.n"]], "ndim (stats_learn.bayes.elements.base property)": [[2, "stats_learn.bayes.elements.Base.ndim"]], "ndim (stats_learn.bayes.models.base property)": [[2, "stats_learn.bayes.models.Base.ndim"]], "prior (stats_learn.bayes.elements.base attribute)": [[2, "stats_learn.bayes.elements.Base.prior"]], "prior (stats_learn.bayes.elements.normallinear attribute)": [[2, "stats_learn.bayes.elements.NormalLinear.prior"]], "prior (stats_learn.bayes.models.normallinear attribute)": [[2, "stats_learn.bayes.models.NormalLinear.prior"]], "prior_cov (stats_learn.bayes.elements.normallinear property)": [[2, "stats_learn.bayes.elements.NormalLinear.prior_cov"]], "prior_cov (stats_learn.bayes.models.normallinear property)": [[2, "stats_learn.bayes.models.NormalLinear.prior_cov"]], "prior_mean (stats_learn.bayes.elements.dirichlet property)": [[2, "stats_learn.bayes.elements.Dirichlet.prior_mean"]], "prior_mean (stats_learn.bayes.elements.normallinear property)": [[2, "stats_learn.bayes.elements.NormalLinear.prior_mean"]], "prior_mean (stats_learn.bayes.models.dirichlet property)": [[2, "stats_learn.bayes.models.Dirichlet.prior_mean"]], "prior_mean (stats_learn.bayes.models.normallinear property)": [[2, "stats_learn.bayes.models.NormalLinear.prior_mean"]], "random_model() (stats_learn.bayes.elements.base method)": [[2, "stats_learn.bayes.elements.Base.random_model"]], "random_model() (stats_learn.bayes.elements.dirichlet method)": [[2, "stats_learn.bayes.elements.Dirichlet.random_model"]], "random_model() (stats_learn.bayes.elements.normallinear method)": [[2, "stats_learn.bayes.elements.NormalLinear.random_model"]], "random_model() (stats_learn.bayes.models.base method)": [[2, "stats_learn.bayes.models.Base.random_model"]], "random_model() (stats_learn.bayes.models.dirichlet method)": [[2, "stats_learn.bayes.models.Dirichlet.random_model"]], "random_model() (stats_learn.bayes.models.normallinear method)": [[2, "stats_learn.bayes.models.NormalLinear.random_model"]], "reset() (stats_learn.bayes.elements.base method)": [[2, "stats_learn.bayes.elements.Base.reset"]], "reset() (stats_learn.bayes.elements.dirichlet method)": [[2, "stats_learn.bayes.elements.Dirichlet.reset"]], "reset() (stats_learn.bayes.elements.normallinear method)": [[2, "stats_learn.bayes.elements.NormalLinear.reset"]], "reset() (stats_learn.bayes.models.base method)": [[2, "stats_learn.bayes.models.Base.reset"]], "reset() (stats_learn.bayes.models.dirichlet method)": [[2, "stats_learn.bayes.models.Dirichlet.reset"]], "reset() (stats_learn.bayes.models.normallinear method)": [[2, "stats_learn.bayes.models.NormalLinear.reset"]], "sample() (stats_learn.bayes.elements.base method)": [[2, "stats_learn.bayes.elements.Base.sample"]], "sample() (stats_learn.bayes.models.base method)": [[2, "stats_learn.bayes.models.Base.sample"]], "shape (stats_learn.bayes.elements.base property)": [[2, "stats_learn.bayes.elements.Base.shape"]], "shape (stats_learn.bayes.models.base property)": [[2, "stats_learn.bayes.models.Base.shape"]], "size (stats_learn.bayes.elements.base property)": [[2, "stats_learn.bayes.elements.Base.size"]], "size (stats_learn.bayes.models.base property)": [[2, "stats_learn.bayes.models.Base.size"]], "space (stats_learn.bayes.elements.base property)": [[2, "stats_learn.bayes.elements.Base.space"]], "space (stats_learn.bayes.models.base property)": [[2, "stats_learn.bayes.models.Base.space"]], "stats_learn.bayes": [[2, "module-stats_learn.bayes"]], "stats_learn.bayes.elements": [[2, "module-stats_learn.bayes.elements"]], "stats_learn.bayes.models": [[2, "module-stats_learn.bayes.models"]], "tex_params() (stats_learn.bayes.models.base static method)": [[2, "stats_learn.bayes.models.Base.tex_params"]], "tex_params() (stats_learn.bayes.models.dirichlet static method)": [[2, "stats_learn.bayes.models.Dirichlet.tex_params"]], "tex_params() (stats_learn.bayes.models.normallinear method)": [[2, "stats_learn.bayes.models.NormalLinear.tex_params"]], "base (class in stats_learn.predictors.base)": [[3, "stats_learn.predictors.base.Base"]], "bayes (class in stats_learn.predictors.base)": [[3, "stats_learn.predictors.base.Bayes"]], "bayesclassifier (class in stats_learn.predictors.base)": [[3, "stats_learn.predictors.base.BayesClassifier"]], "bayesregressor (class in stats_learn.predictors.base)": [[3, "stats_learn.predictors.base.BayesRegressor"]], "classifiermixin (class in stats_learn.predictors.base)": [[3, "stats_learn.predictors.base.ClassifierMixin"]], "litmlp (class in stats_learn.predictors.torch)": [[3, "stats_learn.predictors.torch.LitMLP"]], "litpredictor (class in stats_learn.predictors.torch)": [[3, "stats_learn.predictors.torch.LitPredictor"]], "model (class in stats_learn.predictors.base)": [[3, "stats_learn.predictors.base.Model"]], "modelclassifier (class in stats_learn.predictors.base)": [[3, "stats_learn.predictors.base.ModelClassifier"]], "modelregressor (class in stats_learn.predictors.base)": [[3, "stats_learn.predictors.base.ModelRegressor"]], "regressormixin (class in stats_learn.predictors.base)": [[3, "stats_learn.predictors.base.RegressorMixin"]], "build_mlp() (in module stats_learn.predictors.torch)": [[3, "stats_learn.predictors.torch.build_mlp"]], "configure_optimizers() (stats_learn.predictors.torch.litmlp method)": [[3, "stats_learn.predictors.torch.LitMLP.configure_optimizers"]], "data_assess() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.data_assess"]], "dtype (stats_learn.predictors.base.base property)": [[3, "stats_learn.predictors.base.Base.dtype"]], "evaluate() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.evaluate"]], "evaluate_analytic() (stats_learn.predictors.base.bayesregressor method)": [[3, "stats_learn.predictors.base.BayesRegressor.evaluate_analytic"]], "evaluate_analytic() (stats_learn.predictors.base.modelregressor method)": [[3, "stats_learn.predictors.base.ModelRegressor.evaluate_analytic"]], "evaluate_from_model() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.evaluate_from_model"]], "fit() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.fit"]], "fit_from_model() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.fit_from_model"]], "fit_from_model() (stats_learn.predictors.base.model method)": [[3, "stats_learn.predictors.base.Model.fit_from_model"]], "forward() (stats_learn.predictors.torch.litmlp method)": [[3, "stats_learn.predictors.torch.LitMLP.forward"]], "model (stats_learn.predictors.base.classifiermixin attribute)": [[3, "stats_learn.predictors.base.ClassifierMixin.model"]], "model (stats_learn.predictors.base.regressormixin attribute)": [[3, "stats_learn.predictors.base.RegressorMixin.model"]], "model_assess() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.model_assess"]], "ndim (stats_learn.predictors.base.base property)": [[3, "stats_learn.predictors.base.Base.ndim"]], "plot_predict() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.plot_predict"]], "plot_predict_stats() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.plot_predict_stats"]], "plot_risk_eval_sim() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.plot_risk_eval_sim"]], "predict() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.predict"]], "predict_stats() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.predict_stats"]], "reset() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.reset"]], "reset() (stats_learn.predictors.base.bayes method)": [[3, "stats_learn.predictors.base.Bayes.reset"]], "reset() (stats_learn.predictors.base.model method)": [[3, "stats_learn.predictors.base.Model.reset"]], "reset() (stats_learn.predictors.torch.litpredictor method)": [[3, "stats_learn.predictors.torch.LitPredictor.reset"]], "reset_weights() (in module stats_learn.predictors.torch)": [[3, "stats_learn.predictors.torch.reset_weights"]], "risk_eval_analytic() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.risk_eval_analytic"]], "risk_eval_sim() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.risk_eval_sim"]], "set_params() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.set_params"]], "set_params() (stats_learn.predictors.torch.litpredictor method)": [[3, "stats_learn.predictors.torch.LitPredictor.set_params"]], "shape (stats_learn.predictors.base.base property)": [[3, "stats_learn.predictors.base.Base.shape"]], "size (stats_learn.predictors.base.base property)": [[3, "stats_learn.predictors.base.Base.size"]], "space (stats_learn.predictors.base.base property)": [[3, "stats_learn.predictors.base.Base.space"]], "stats_learn.predictors": [[3, "module-stats_learn.predictors"]], "stats_learn.predictors.base": [[3, "module-stats_learn.predictors.base"]], "stats_learn.predictors.torch": [[3, "module-stats_learn.predictors.torch"]], "tex_params() (stats_learn.predictors.base.base method)": [[3, "stats_learn.predictors.base.Base.tex_params"]], "training_step() (stats_learn.predictors.torch.litmlp method)": [[3, "stats_learn.predictors.torch.LitMLP.training_step"]], "base (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.Base"]], "base (class in stats_learn.random.models)": [[4, "stats_learn.random.models.Base"]], "baserv (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.BaseRV"]], "baservx (class in stats_learn.random.models)": [[4, "stats_learn.random.models.BaseRVx"]], "baservxy (class in stats_learn.random.models)": [[4, "stats_learn.random.models.BaseRVxy"]], "baservy (class in stats_learn.random.models)": [[4, "stats_learn.random.models.BaseRVy"]], "beta (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.Beta"]], "betalinear (class in stats_learn.random.models)": [[4, "stats_learn.random.models.BetaLinear"]], "binomial (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.Binomial"]], "classconditional (class in stats_learn.random.models)": [[4, "stats_learn.random.models.ClassConditional"]], "dataconditional (class in stats_learn.random.models)": [[4, "stats_learn.random.models.DataConditional"]], "dataconditionalrvx (class in stats_learn.random.models)": [[4, "stats_learn.random.models.DataConditionalRVx"]], "dataconditionalrvxy (class in stats_learn.random.models)": [[4, "stats_learn.random.models.DataConditionalRVxy"]], "dataconditionalrvy (class in stats_learn.random.models)": [[4, "stats_learn.random.models.DataConditionalRVy"]], "dataempirical (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.DataEmpirical"]], "dataempirical (class in stats_learn.random.models)": [[4, "stats_learn.random.models.DataEmpirical"]], "dataempiricalrv (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.DataEmpiricalRV"]], "dataempiricalrvx (class in stats_learn.random.models)": [[4, "stats_learn.random.models.DataEmpiricalRVx"]], "dataempiricalrvxy (class in stats_learn.random.models)": [[4, "stats_learn.random.models.DataEmpiricalRVxy"]], "dataempiricalrvy (class in stats_learn.random.models)": [[4, "stats_learn.random.models.DataEmpiricalRVy"]], "deterministic (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.Deterministic"]], "deterministicrv (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.DeterministicRV"]], "dirichlet (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.Dirichlet"]], "dirichletempirical (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.DirichletEmpirical"]], "dirichletempiricalscalar (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.DirichletEmpiricalScalar"]], "empirical (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.Empirical"]], "empiricalscalar (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.EmpiricalScalar"]], "finitegeneric (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.FiniteGeneric"]], "finitegenericrv (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.FiniteGenericRV"]], "mixinrv (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.MixinRV"]], "mixinrvx (class in stats_learn.random.models)": [[4, "stats_learn.random.models.MixinRVx"]], "mixinrvy (class in stats_learn.random.models)": [[4, "stats_learn.random.models.MixinRVy"]], "mixture (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.Mixture"]], "mixture (class in stats_learn.random.models)": [[4, "stats_learn.random.models.Mixture"]], "mixturerv (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.MixtureRV"]], "mixturervx (class in stats_learn.random.models)": [[4, "stats_learn.random.models.MixtureRVx"]], "mixturervxy (class in stats_learn.random.models)": [[4, "stats_learn.random.models.MixtureRVxy"]], "mixturervy (class in stats_learn.random.models)": [[4, "stats_learn.random.models.MixtureRVy"]], "normal (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.Normal"]], "normallinear (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.NormalLinear"]], "normallinear (class in stats_learn.random.models)": [[4, "stats_learn.random.models.NormalLinear"]], "uniform (class in stats_learn.random.elements)": [[4, "stats_learn.random.elements.Uniform"]], "a (stats_learn.random.elements.beta property)": [[4, "stats_learn.random.elements.Beta.a"]], "add_data() (stats_learn.random.elements.dataempirical method)": [[4, "stats_learn.random.elements.DataEmpirical.add_data"]], "add_data() (stats_learn.random.models.dataempirical method)": [[4, "stats_learn.random.models.DataEmpirical.add_data"]], "add_values() (stats_learn.random.elements.dataempirical method)": [[4, "stats_learn.random.elements.DataEmpirical.add_values"]], "add_values() (stats_learn.random.models.dataempirical method)": [[4, "stats_learn.random.models.DataEmpirical.add_values"]], "alpha_0 (stats_learn.random.elements.dirichlet property)": [[4, "stats_learn.random.elements.Dirichlet.alpha_0"]], "alpha_0 (stats_learn.random.elements.dirichletempirical property)": [[4, "stats_learn.random.elements.DirichletEmpirical.alpha_0"]], "alpha_0 (stats_learn.random.elements.dirichletempiricalscalar property)": [[4, "stats_learn.random.elements.DirichletEmpiricalScalar.alpha_0"]], "b (stats_learn.random.elements.beta property)": [[4, "stats_learn.random.elements.Beta.b"]], "basis (stats_learn.random.elements.normallinear property)": [[4, "stats_learn.random.elements.NormalLinear.basis"]], "basis_y_x (stats_learn.random.models.betalinear property)": [[4, "stats_learn.random.models.BetaLinear.basis_y_x"]], "basis_y_x (stats_learn.random.models.normallinear property)": [[4, "stats_learn.random.models.NormalLinear.basis_y_x"]], "cov (stats_learn.random.elements.dataempiricalrv property)": [[4, "stats_learn.random.elements.DataEmpiricalRV.cov"]], "cov (stats_learn.random.elements.dirichletempiricalscalar property)": [[4, "stats_learn.random.elements.DirichletEmpiricalScalar.cov"]], "cov (stats_learn.random.elements.finitegenericrv property)": [[4, "stats_learn.random.elements.FiniteGenericRV.cov"]], "cov (stats_learn.random.elements.mixinrv property)": [[4, "stats_learn.random.elements.MixinRV.cov"]], "cov (stats_learn.random.elements.normal property)": [[4, "stats_learn.random.elements.Normal.cov"]], "cov_x (stats_learn.random.models.betalinear property)": [[4, "stats_learn.random.models.BetaLinear.cov_x"]], "cov_x (stats_learn.random.models.classconditional property)": [[4, "stats_learn.random.models.ClassConditional.cov_x"]], "cov_x (stats_learn.random.models.dataconditionalrvx property)": [[4, "stats_learn.random.models.DataConditionalRVx.cov_x"]], "cov_x (stats_learn.random.models.dataempiricalrvx property)": [[4, "stats_learn.random.models.DataEmpiricalRVx.cov_x"]], "cov_x (stats_learn.random.models.mixinrvx property)": [[4, "stats_learn.random.models.MixinRVx.cov_x"]], "cov_x (stats_learn.random.models.normallinear property)": [[4, "stats_learn.random.models.NormalLinear.cov_x"]], "cov_y_x() (stats_learn.random.models.betalinear method)": [[4, "stats_learn.random.models.BetaLinear.cov_y_x"]], "cov_y_x() (stats_learn.random.models.mixinrvy method)": [[4, "stats_learn.random.models.MixinRVy.cov_y_x"]], "cov_y_x_ (stats_learn.random.models.normallinear property)": [[4, "stats_learn.random.models.NormalLinear.cov_y_x_"]], "dists (stats_learn.random.elements.mixture property)": [[4, "stats_learn.random.elements.Mixture.dists"]], "dists (stats_learn.random.models.classconditional property)": [[4, "stats_learn.random.models.ClassConditional.dists"]], "dists (stats_learn.random.models.dataconditional property)": [[4, "stats_learn.random.models.DataConditional.dists"]], "dists (stats_learn.random.models.mixture property)": [[4, "stats_learn.random.models.Mixture.dists"]], "dtype (stats_learn.random.elements.base property)": [[4, "stats_learn.random.elements.Base.dtype"]], "dtype (stats_learn.random.models.base property)": [[4, "stats_learn.random.models.Base.dtype"]], "from_data() (stats_learn.random.elements.dataempirical class method)": [[4, "stats_learn.random.elements.DataEmpirical.from_data"]], "from_data() (stats_learn.random.models.dataempirical class method)": [[4, "stats_learn.random.models.DataEmpirical.from_data"]], "from_finite() (stats_learn.random.models.classconditional class method)": [[4, "stats_learn.random.models.ClassConditional.from_finite"]], "from_finite() (stats_learn.random.models.dataconditional class method)": [[4, "stats_learn.random.models.DataConditional.from_finite"]], "from_grid() (stats_learn.random.elements.finitegeneric class method)": [[4, "stats_learn.random.elements.FiniteGeneric.from_grid"]], "from_mean() (stats_learn.random.elements.beta class method)": [[4, "stats_learn.random.elements.Beta.from_mean"]], "from_mean_emp() (stats_learn.random.models.dataconditional class method)": [[4, "stats_learn.random.models.DataConditional.from_mean_emp"]], "from_mean_poly_emp() (stats_learn.random.models.dataconditional class method)": [[4, "stats_learn.random.models.DataConditional.from_mean_poly_emp"]], "lims (stats_learn.random.elements.uniform property)": [[4, "stats_learn.random.elements.Uniform.lims"]], "mean (stats_learn.random.elements.dataempiricalrv property)": [[4, "stats_learn.random.elements.DataEmpiricalRV.mean"]], "mean (stats_learn.random.elements.dirichlet property)": [[4, "stats_learn.random.elements.Dirichlet.mean"]], "mean (stats_learn.random.elements.dirichletempirical property)": [[4, "stats_learn.random.elements.DirichletEmpirical.mean"]], "mean (stats_learn.random.elements.dirichletempiricalscalar property)": [[4, "stats_learn.random.elements.DirichletEmpiricalScalar.mean"]], "mean (stats_learn.random.elements.empirical property)": [[4, "stats_learn.random.elements.Empirical.mean"]], "mean (stats_learn.random.elements.finitegenericrv property)": [[4, "stats_learn.random.elements.FiniteGenericRV.mean"]], "mean (stats_learn.random.elements.mixinrv property)": [[4, "stats_learn.random.elements.MixinRV.mean"]], "mean (stats_learn.random.elements.mixturerv property)": [[4, "stats_learn.random.elements.MixtureRV.mean"]], "mean (stats_learn.random.elements.normal property)": [[4, "stats_learn.random.elements.Normal.mean"]], "mean_x (stats_learn.random.models.betalinear property)": [[4, "stats_learn.random.models.BetaLinear.mean_x"]], "mean_x (stats_learn.random.models.classconditional property)": [[4, "stats_learn.random.models.ClassConditional.mean_x"]], "mean_x (stats_learn.random.models.dataconditionalrvx property)": [[4, "stats_learn.random.models.DataConditionalRVx.mean_x"]], "mean_x (stats_learn.random.models.dataempiricalrvx property)": [[4, "stats_learn.random.models.DataEmpiricalRVx.mean_x"]], "mean_x (stats_learn.random.models.mixinrvx property)": [[4, "stats_learn.random.models.MixinRVx.mean_x"]], "mean_x (stats_learn.random.models.normallinear property)": [[4, "stats_learn.random.models.NormalLinear.mean_x"]], "mean_y_x() (stats_learn.random.models.betalinear method)": [[4, "stats_learn.random.models.BetaLinear.mean_y_x"]], "mean_y_x() (stats_learn.random.models.mixinrvy method)": [[4, "stats_learn.random.models.MixinRVy.mean_y_x"]], "mean_y_x() (stats_learn.random.models.mixturervy method)": [[4, "stats_learn.random.models.MixtureRVy.mean_y_x"]], "mean_y_x() (stats_learn.random.models.normallinear method)": [[4, "stats_learn.random.models.NormalLinear.mean_y_x"]], "mode (stats_learn.random.elements.base property)": [[4, "stats_learn.random.elements.Base.mode"]], "mode (stats_learn.random.elements.dataempirical property)": [[4, "stats_learn.random.elements.DataEmpirical.mode"]], "mode (stats_learn.random.elements.finitegeneric property)": [[4, "stats_learn.random.elements.FiniteGeneric.mode"]], "mode (stats_learn.random.elements.mixture property)": [[4, "stats_learn.random.elements.Mixture.mode"]], "mode_x (stats_learn.random.models.base property)": [[4, "stats_learn.random.models.Base.mode_x"]], "mode_x (stats_learn.random.models.betalinear property)": [[4, "stats_learn.random.models.BetaLinear.mode_x"]], "mode_x (stats_learn.random.models.classconditional property)": [[4, "stats_learn.random.models.ClassConditional.mode_x"]], "mode_x (stats_learn.random.models.dataconditional property)": [[4, "stats_learn.random.models.DataConditional.mode_x"]], "mode_x (stats_learn.random.models.dataempirical property)": [[4, "stats_learn.random.models.DataEmpirical.mode_x"]], "mode_x (stats_learn.random.models.mixture property)": [[4, "stats_learn.random.models.Mixture.mode_x"]], "mode_x (stats_learn.random.models.normallinear property)": [[4, "stats_learn.random.models.NormalLinear.mode_x"]], "mode_y_x() (stats_learn.random.models.base method)": [[4, "stats_learn.random.models.Base.mode_y_x"]], "mode_y_x() (stats_learn.random.models.classconditional method)": [[4, "stats_learn.random.models.ClassConditional.mode_y_x"]], "mode_y_x() (stats_learn.random.models.normallinear method)": [[4, "stats_learn.random.models.NormalLinear.mode_y_x"]], "model_x (stats_learn.random.models.base property)": [[4, "stats_learn.random.models.Base.model_x"]], "model_x (stats_learn.random.models.betalinear property)": [[4, "stats_learn.random.models.BetaLinear.model_x"]], "model_x (stats_learn.random.models.classconditional property)": [[4, "stats_learn.random.models.ClassConditional.model_x"]], "model_x (stats_learn.random.models.dataconditional property)": [[4, "stats_learn.random.models.DataConditional.model_x"]], "model_x (stats_learn.random.models.mixture property)": [[4, "stats_learn.random.models.Mixture.model_x"]], "model_x (stats_learn.random.models.normallinear property)": [[4, "stats_learn.random.models.NormalLinear.model_x"]], "model_x_y() (stats_learn.random.models.classconditional method)": [[4, "stats_learn.random.models.ClassConditional.model_x_y"]], "model_y (stats_learn.random.models.classconditional property)": [[4, "stats_learn.random.models.ClassConditional.model_y"]], "model_y_x() (stats_learn.random.models.base method)": [[4, "stats_learn.random.models.Base.model_y_x"]], "model_y_x() (stats_learn.random.models.baservx method)": [[4, "stats_learn.random.models.BaseRVx.model_y_x"]], "model_y_x() (stats_learn.random.models.baservxy method)": [[4, "stats_learn.random.models.BaseRVxy.model_y_x"]], "model_y_x() (stats_learn.random.models.baservy method)": [[4, "stats_learn.random.models.BaseRVy.model_y_x"]], "model_y_x() (stats_learn.random.models.betalinear method)": [[4, "stats_learn.random.models.BetaLinear.model_y_x"]], "model_y_x() (stats_learn.random.models.classconditional method)": [[4, "stats_learn.random.models.ClassConditional.model_y_x"]], "model_y_x() (stats_learn.random.models.dataconditional method)": [[4, "stats_learn.random.models.DataConditional.model_y_x"]], "model_y_x() (stats_learn.random.models.dataempirical method)": [[4, "stats_learn.random.models.DataEmpirical.model_y_x"]], "model_y_x() (stats_learn.random.models.mixture method)": [[4, "stats_learn.random.models.Mixture.model_y_x"]], "model_y_x() (stats_learn.random.models.normallinear method)": [[4, "stats_learn.random.models.NormalLinear.model_y_x"]], "n (stats_learn.random.elements.binomial property)": [[4, "stats_learn.random.elements.Binomial.n"]], "n (stats_learn.random.elements.dirichletempirical property)": [[4, "stats_learn.random.elements.DirichletEmpirical.n"]], "n (stats_learn.random.elements.dirichletempiricalscalar property)": [[4, "stats_learn.random.elements.DirichletEmpiricalScalar.n"]], "n (stats_learn.random.elements.empirical property)": [[4, "stats_learn.random.elements.Empirical.n"]], "n_dists (stats_learn.random.elements.mixture property)": [[4, "stats_learn.random.elements.Mixture.n_dists"]], "n_dists (stats_learn.random.models.mixture property)": [[4, "stats_learn.random.models.Mixture.n_dists"]], "ndim (stats_learn.random.elements.base property)": [[4, "stats_learn.random.elements.Base.ndim"]], "ndim (stats_learn.random.models.base property)": [[4, "stats_learn.random.models.Base.ndim"]], "p (stats_learn.random.elements.binomial property)": [[4, "stats_learn.random.elements.Binomial.p"]], "p (stats_learn.random.elements.finitegeneric property)": [[4, "stats_learn.random.elements.FiniteGeneric.p"]], "p_y (stats_learn.random.models.classconditional property)": [[4, "stats_learn.random.models.ClassConditional.p_y"]], "plot_cov_y_x() (stats_learn.random.models.mixinrvy method)": [[4, "stats_learn.random.models.MixinRVy.plot_cov_y_x"]], "plot_mean_y_x() (stats_learn.random.models.mixinrvy method)": [[4, "stats_learn.random.models.MixinRVy.plot_mean_y_x"]], "plot_mode_y_x() (stats_learn.random.models.base method)": [[4, "stats_learn.random.models.Base.plot_mode_y_x"]], "plot_prob() (stats_learn.random.elements.base method)": [[4, "stats_learn.random.elements.Base.plot_prob"]], "plot_prob() (stats_learn.random.elements.dataempirical method)": [[4, "stats_learn.random.elements.DataEmpirical.plot_prob"]], "plot_prob() (stats_learn.random.elements.dirichlet method)": [[4, "stats_learn.random.elements.Dirichlet.plot_prob"]], "plot_prob() (stats_learn.random.elements.mixture method)": [[4, "stats_learn.random.elements.Mixture.plot_prob"]], "prob() (stats_learn.random.elements.base method)": [[4, "stats_learn.random.elements.Base.prob"]], "prob() (stats_learn.random.elements.beta method)": [[4, "stats_learn.random.elements.Beta.prob"]], "prob() (stats_learn.random.elements.binomial method)": [[4, "stats_learn.random.elements.Binomial.prob"]], "prob() (stats_learn.random.elements.deterministic method)": [[4, "stats_learn.random.elements.Deterministic.prob"]], "prob() (stats_learn.random.elements.dirichlet method)": [[4, "stats_learn.random.elements.Dirichlet.prob"]], "prob() (stats_learn.random.elements.dirichletempirical method)": [[4, "stats_learn.random.elements.DirichletEmpirical.prob"]], "prob() (stats_learn.random.elements.dirichletempiricalscalar method)": [[4, "stats_learn.random.elements.DirichletEmpiricalScalar.prob"]], "prob() (stats_learn.random.elements.empirical method)": [[4, "stats_learn.random.elements.Empirical.prob"]], "prob() (stats_learn.random.elements.empiricalscalar method)": [[4, "stats_learn.random.elements.EmpiricalScalar.prob"]], "prob() (stats_learn.random.elements.mixture method)": [[4, "stats_learn.random.elements.Mixture.prob"]], "prob() (stats_learn.random.elements.normal method)": [[4, "stats_learn.random.elements.Normal.prob"]], "prob() (stats_learn.random.elements.uniform method)": [[4, "stats_learn.random.elements.Uniform.prob"]], "sample() (stats_learn.random.elements.base method)": [[4, "stats_learn.random.elements.Base.sample"]], "sample() (stats_learn.random.models.base method)": [[4, "stats_learn.random.models.Base.sample"]], "set_dist() (stats_learn.random.elements.mixture method)": [[4, "stats_learn.random.elements.Mixture.set_dist"]], "set_dist() (stats_learn.random.models.mixture method)": [[4, "stats_learn.random.models.Mixture.set_dist"]], "set_dist_attr() (stats_learn.random.elements.mixture method)": [[4, "stats_learn.random.elements.Mixture.set_dist_attr"]], "set_dist_attr() (stats_learn.random.models.mixture method)": [[4, "stats_learn.random.models.Mixture.set_dist_attr"]], "shape (stats_learn.random.elements.base property)": [[4, "stats_learn.random.elements.Base.shape"]], "shape (stats_learn.random.models.base property)": [[4, "stats_learn.random.models.Base.shape"]], "shape (stats_learn.random.models.mixinrvy attribute)": [[4, "stats_learn.random.models.MixinRVy.shape"]], "simplex_round() (stats_learn.random.elements.empirical static method)": [[4, "stats_learn.random.elements.Empirical.simplex_round"]], "size (stats_learn.random.elements.base property)": [[4, "stats_learn.random.elements.Base.size"]], "size (stats_learn.random.models.base property)": [[4, "stats_learn.random.models.Base.size"]], "space (stats_learn.random.elements.base property)": [[4, "stats_learn.random.elements.Base.space"]], "space (stats_learn.random.models.base property)": [[4, "stats_learn.random.models.Base.space"]], "space (stats_learn.random.models.mixinrvy attribute)": [[4, "stats_learn.random.models.MixinRVy.space"]], "stats_learn.random": [[4, "module-stats_learn.random"]], "stats_learn.random.elements": [[4, "module-stats_learn.random.elements"]], "stats_learn.random.models": [[4, "module-stats_learn.random.models"]], "value (stats_learn.random.elements.deterministic property)": [[4, "stats_learn.random.elements.Deterministic.value"]], "value (stats_learn.random.elements.deterministicrv property)": [[4, "stats_learn.random.elements.DeterministicRV.value"]], "values (stats_learn.random.elements.finitegeneric property)": [[4, "stats_learn.random.elements.FiniteGeneric.values"]], "weights (stats_learn.random.elements.mixture property)": [[4, "stats_learn.random.elements.Mixture.weights"]], "weights (stats_learn.random.elements.normallinear property)": [[4, "stats_learn.random.elements.NormalLinear.weights"]], "weights (stats_learn.random.models.mixture property)": [[4, "stats_learn.random.models.Mixture.weights"]]}})